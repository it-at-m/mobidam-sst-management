/*
 * The MIT License
 * Copyright © 2023 Landeshauptstadt München | it@M
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.muenchen.mobidam.integration.client.domain;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.v3.oas.annotations.media.Schema;

import java.time.LocalDate;
import java.util.Objects;
import java.util.UUID;

/**
 * SchnittstelleDTO
 */
@JsonPropertyOrder({
  SchnittstelleDTO.JSON_PROPERTY_ID,
  SchnittstelleDTO.JSON_PROPERTY_NAME,
  SchnittstelleDTO.JSON_PROPERTY_ANLAGEDATUM,
  SchnittstelleDTO.JSON_PROPERTY_AENDERUNGSDATUM,
  SchnittstelleDTO.JSON_PROPERTY_STATUS,
  SchnittstelleDTO.JSON_PROPERTY_BEGRUENDUNG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-22T16:23:15.259024800+01:00[Europe/Berlin]")
public class SchnittstelleDTO {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ANLAGEDATUM = "anlagedatum";
  private LocalDate anlagedatum;

  public static final String JSON_PROPERTY_AENDERUNGSDATUM = "aenderungsdatum";
  private LocalDate aenderungsdatum;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_BEGRUENDUNG = "begruendung";
  private String begruendung;

  public SchnittstelleDTO() {
  }

  public SchnittstelleDTO id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public SchnittstelleDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SchnittstelleDTO anlagedatum(LocalDate anlagedatum) {
    
    this.anlagedatum = anlagedatum;
    return this;
  }

   /**
   * Get anlagedatum
   * @return anlagedatum
  **/
  @javax.annotation.Nonnull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ANLAGEDATUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getAnlagedatum() {
    return anlagedatum;
  }


  @JsonProperty(JSON_PROPERTY_ANLAGEDATUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnlagedatum(LocalDate anlagedatum) {
    this.anlagedatum = anlagedatum;
  }


  public SchnittstelleDTO aenderungsdatum(LocalDate aenderungsdatum) {
    
    this.aenderungsdatum = aenderungsdatum;
    return this;
  }

   /**
   * Get aenderungsdatum
   * @return aenderungsdatum
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AENDERUNGSDATUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getAenderungsdatum() {
    return aenderungsdatum;
  }


  @JsonProperty(JSON_PROPERTY_AENDERUNGSDATUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAenderungsdatum(LocalDate aenderungsdatum) {
    this.aenderungsdatum = aenderungsdatum;
  }


  public SchnittstelleDTO status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public SchnittstelleDTO begruendung(String begruendung) {
    
    this.begruendung = begruendung;
    return this;
  }

   /**
   * Get begruendung
   * @return begruendung
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BEGRUENDUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBegruendung() {
    return begruendung;
  }


  @JsonProperty(JSON_PROPERTY_BEGRUENDUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBegruendung(String begruendung) {
    this.begruendung = begruendung;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchnittstelleDTO schnittstelleDTO = (SchnittstelleDTO) o;
    return Objects.equals(this.id, schnittstelleDTO.id) &&
        Objects.equals(this.name, schnittstelleDTO.name) &&
        Objects.equals(this.anlagedatum, schnittstelleDTO.anlagedatum) &&
        Objects.equals(this.aenderungsdatum, schnittstelleDTO.aenderungsdatum) &&
        Objects.equals(this.status, schnittstelleDTO.status) &&
        Objects.equals(this.begruendung, schnittstelleDTO.begruendung);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, anlagedatum, aenderungsdatum, status, begruendung);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchnittstelleDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    anlagedatum: ").append(toIndentedString(anlagedatum)).append("\n");
    sb.append("    aenderungsdatum: ").append(toIndentedString(aenderungsdatum)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    begruendung: ").append(toIndentedString(begruendung)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

