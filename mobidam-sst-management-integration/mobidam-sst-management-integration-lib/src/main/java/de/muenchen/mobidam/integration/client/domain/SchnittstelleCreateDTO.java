/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.muenchen.mobidam.integration.client.domain;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * SchnittstelleCreateDTO
 */
@JsonPropertyOrder({
  SchnittstelleCreateDTO.JSON_PROPERTY_NAME,
  SchnittstelleCreateDTO.JSON_PROPERTY_STATUS,
  SchnittstelleCreateDTO.JSON_PROPERTY_BEGRUENDUNG
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-22T16:23:15.259024800+01:00[Europe/Berlin]")
public class SchnittstelleCreateDTO {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_BEGRUENDUNG = "begruendung";
  private String begruendung;

  public SchnittstelleCreateDTO() {
  }

  public SchnittstelleCreateDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SchnittstelleCreateDTO status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(String status) {
    this.status = status;
  }


  public SchnittstelleCreateDTO begruendung(String begruendung) {
    
    this.begruendung = begruendung;
    return this;
  }

   /**
   * Get begruendung
   * @return begruendung
  **/
  @javax.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BEGRUENDUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBegruendung() {
    return begruendung;
  }


  @JsonProperty(JSON_PROPERTY_BEGRUENDUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBegruendung(String begruendung) {
    this.begruendung = begruendung;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchnittstelleCreateDTO schnittstelleCreateDTO = (SchnittstelleCreateDTO) o;
    return Objects.equals(this.name, schnittstelleCreateDTO.name) &&
        Objects.equals(this.status, schnittstelleCreateDTO.status) &&
        Objects.equals(this.begruendung, schnittstelleCreateDTO.begruendung);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, status, begruendung);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchnittstelleCreateDTO {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    begruendung: ").append(toIndentedString(begruendung)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

